name: Run Docker API Evaluation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-docker-eval:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: liquid4all/ruler:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create benchmark directory
        run: mkdir -p scripts/benchmark_root

      - name: Run benchmark in Docker
        env:
          NUM_SAMPLES: 1
          LIQUID_SERVER: ${{ vars.LIQUID_SERVER }}
          OPENAI_API_KEY: ${{ secrets.LIQUID_API_KEY }}
          CI: true
        run: |
          docker run \
            -e LIQUID_API_KEY=$OPENAI_API_KEY \
            -e LIQUID_SERVER=$LIQUID_SERVER \
            -e NUM_SAMPLES=$NUM_SAMPLES \
            -e CI=$CI \
            -v $PWD/scripts/benchmark_root:/app/RULER/scripts/benchmark_root \
            liquid4all/ruler:latest

      - name: Output result summary tables
        run: |
          ls -alh scripts/benchmark_root/lfm-3b/synthetic/*/pred/*
          for csv_file in scripts/benchmark_root/lfm-3b/synthetic/*/pred/summary*.csv; do
            if [ -f "$csv_file" ]; then
              echo "Found summary CSV file: $csv_file"
              # Print the file path as a header
              echo "**\`$csv_file\`**" >> $GITHUB_STEP_SUMMARY

              # convert CSV to markdown table
              {
                head -n1 "$csv_file" | sed 's/,/ | /g' | sed 's/^/| /' | sed 's/$/ |/';
                echo -n "| " && head -n1 "$csv_file" | sed 's/[^,]/-/g; s/,/ | /g' | sed 's/$/ |/';
                tail -n +2 "$csv_file" | sed 's/,/ | /g' | sed 's/^/| /' | sed 's/$/ |/';
              } >> $GITHUB_STEP_SUMMARY

              echo -e "\n" >> $GITHUB_STEP_SUMMARY
            fi
          done
